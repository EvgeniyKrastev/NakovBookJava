package Chapter8BinarySystems;

class Ch8BinarySystems {

    static String intToBinary(int n) {
        return Integer.toBinaryString(n);
    }

    // Метод за преобразуване на дробно число в двоична бройна система
    static String floatToBinary(double num, int precision) {
        StringBuilder binary = new StringBuilder();

        if (num < 0) {
            binary.append("-");
            num = Math.abs(num);
        }

        // Цяла част
        int intPart = (int) num;
        binary.append(Integer.toBinaryString(intPart));
        binary.append('.');

        // Дробна част
        double fractionalPart = num - intPart;
        for (int i = 0; i < precision; i++) {
            fractionalPart *= 2;
            int fractionalBit = (int) fractionalPart;
            binary.append(fractionalBit);
            fractionalPart -= fractionalBit;
        }

        return binary.toString();
    }

    /**
     * 1. Превърнете числата 151, 35, 43, 251 и -0,41 в двоична бройна система.
     * Използвайте методите за превръщане от една бройна система в друга.
     * Можете да сверите резултатите си с калкулатора на Windows, който
     * поддържа работа с бройни системи след превключване в режим
     * "Scientific".
     */
    static void zad1DecimalToBinary() {
        int[] integers = {151, 35, 43, 251};
        for (int n : integers) {
            System.out.println(n + " в двоична бройна система: " + intToBinary(n));
        }

        // Пример за дробно число
        double decimalNumber = -0.41;
        System.out.println(decimalNumber + " в двоична бройна система: " + floatToBinary(decimalNumber, 8));
    }

    /**
     * 2. Превърнете числото 1111010110011110(2) в шестнадесетична и десетична
     * бройна система.
     * Погледнете упътването за предходната задача.
     */
    static void zad2() {

    }

    /**
     * 3. Превърнете шестнайсетичните числа 2A3E, FA, FFFF, 5A0E9 в двоична и
     * десетична бройна система.
     * 3. Погледнете упътването за предходната задача.
     */
    static void zad3() {

    }

    /**
     * 4. Да се напише програма, която преобразува десетично число в двоично.
     * 4. Правилото е "делим на 2 и долепяме остатъците в обратен ред". За
     * делене с остатък използваме оператора %.
     */
    static void zad4() {

    }

    /**
     * 5. Да се напише програма, която преобразува двоично число в десетично.
     * 5. Започнете от сума 0. Умножете най-десния бит с 1 и го прибавете към
     * сумата. Следващия бит вляво умножете по 2 и добавете към сумата.
     * Следващия бит отляво умножете по 4 и добавете към сумата и т.н.
     */
    static void zad5() {

    }

    /**
     * 6. Да се напише програма, която преобразува десетично число в
     * шестнадесетично.
     * 6. Правилото е "делим на основата на системата (16) и долепяме остатъ
     * ците в обратен ред". Трябва да си напишем метод за отпечатване на
     * шестнайсетична цифра по дадена стойност между 0 и 15.
     */
    static void zad6() {

    }

    /**
     * 7. Да се напише програма, която преобразува шестнадесетично число в
     * десетично.
     * 7. Започнете от сума 0. Умножете най-дясната цифра с 1 и я прибавете към
     * сумата. Следващата цифра вляво умножете по 16 и я добавете към
     * сумата. Следващата цифра вляво умножете по 16*16 и я добавете към
     * сумата и т.н.
     */
    static void zad7() {

    }

    /**
     * 8. Да се напише програма, която преобразува шестнадесетично число в
     * двоично.
     * 8. Ползвайте бързия начин за преминаване между шестнайсетична и
     * двоична бройна система (всяка шестнайсетична цифра съответства на 4
     * двоични бита).
     */
    static void zad8() {

    }

    /**
     * 9. Да се напише програма, която преобразува двоично число в шестна
     * десетично.
     * 9. Ползвайте бързия начин за преминаване между двоична и шестнайсе
     * тична бройна система (всяка шестнайсетична цифра съответства на 4
     * двоични бита).
     */
    static void zad9() {

    }

    /**
     * 10. Да се напише програма, която преобразува двоично число в десетично
     * по схемата на Хорнер.
     * 10. Приложете директно схемата на Хорнер.
     */
    static void zad10() {

    }

    /**
     * 11. Да се напише програма, която преобразува римските числа в арабски.
     * 11. Сканирайте цифрите на римското число отляво надясно и ги добавяйте
     * към сума, която първоначално е инициализирана с 0. При обработката
     * на всяка римска цифра я взимайте с положителен или отрицателен знак
     * в зависимост от следващата цифра (дали има по-малка или по-голяма
     * десетична стойност).
     */
    static void zad11() {

    }

    /**
     * 12. Да се напише програма, която преобразува арабските числа в римски.
     * 12. Разгледайте съответствията на числата от 1 до 9 с тяхното римско
     * представяне с цифрите "I", "V" и "X":
     * 1 -> I
     * 2 -> II
     * 3 -> III
     * 4 -> IV
     * 5 -> V
     * 6 -> VI
     * 7 -> VII
     * 8 -> VIII
     * 9 -> IX
     * Имаме абсолютно аналогични съответствия на числата 10, 20, ..., 90 с
     * тяхното представяне с римските цифри "X", "L" и "C", нали? Имаме
     * аналогични съответствия между числата 100, 200, ..., 900 и тяхното
     * представяне с римските цифри "C", "D" и "M" и т.н.
     * Сега сме готови да преобразуваме числото N в римска бройна система.
     * То трябва да е в интервала [1...3999], иначе съобщаваме за грешка.
     * Първо отделяме хилядите (N / 1000) и ги заместваме с римския им
     * еквивалент. След това отделяме стотиците ((N / 100) % 10) и ги
     * заместваме с римския им еквивалент и т.н.
     */
    static void zad12() {
    }

    /**
     * 13. Да се напише програма, която определя (отпечатва) стойността на
     * мантисата, знака на мантисата и стойността на експонентата за числа
     * от тип float и double.
     * 13. Използвайте специалните методи за извличане на побитовото предста
     * вяне на дадено реално число Float.floatToRawIntBits() и Double.
     * doubleToRawLongBits(), след което използвайте подходящи побитови
     * операции (измествания и битови маски).
     */
    static void zad13() {
    }

    static void main(String[] args) {
        zad12();
    }
}